TC=O(N^2),SC=O(1)


void calculateSpan(int price[], int n, int S[])
{
    // Span value of first day is always 1
    S[0] = 1;
 
    // Calculate span value of remaining days 
    // by linearly checking previous days
    for (int i = 1; i < n; i++)
    {
        S[i] = 1; // Initialize span value
 
        // Traverse left while the next element 
        // on left is smaller than price[i]
        for (int j = i - 1; (j >= 0) &&
                (price[i] >= price[j]); j--)
            S[i]++;
    }
}



TC=O(N),SC=O(N)
 vector<int>NGOL(int arr[],int n)
    {   stack<int>st;
    vector<int>ans(n,-1);
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty() && arr[st.top()]<arr[i])
            {
                ans[st.top()]=i;st.pop();
            }
            st.push(i);
        }
        return ans;
    }
    vector <int> calculateSpan(int price[], int n)
    {
       // Your code here
       vector<int>ans=NGOL(price,n);
      
       for(int i=0;i<ans.size();i++)
       {
          ans[i]=i-ans[i];
       }
       return ans;
    }
};

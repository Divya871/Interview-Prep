TC=O(N^2),SC=O(1)

->Make an array/list ‘RESULT’ of size ‘N’ and fill it with 0.
->Run a loop where ‘i’ ranges from 0 to ‘N’-1 and do the following -:
->Initialize an integer ‘j’ := ‘i’.
->Run a loop till ‘j’ >= 0 and PRICE[j] <= PRICE[i]:
->Increment ‘RESULT[i]’ by 1,
->Decrement ‘j’ by 1.
->Return ‘RESULT’.

vector<int> findSpans(vector<int> &price) {
    int n = price.size();
    vector<int> result(n,0);

    for(int i = 0; i < n; i++) {
        int j = i;
        while(j >= 0 && price[j] <= price[i]) {
            result[i] += 1;
            j -= 1;
        }
    }

    return result;
}



TC=O(N),SC=O(N)
 vector<int>NGOL(int arr[],int n)
    {   stack<int>st;
    vector<int>ans(n,-1);
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty() && arr[st.top()]<arr[i])
            {
                ans[st.top()]=i;st.pop();
            }
            st.push(i);
        }
        return ans;
    }
    vector <int> calculateSpan(int price[], int n)
    {
       // Your code here
       vector<int>ans=NGOL(price,n);
      
       for(int i=0;i<ans.size();i++)
       {
          ans[i]=i-ans[i];
       }
       return ans;
    }
};

TC=O(N),SC=O(N)

->Create a hash set.
->Create a reference pointer ptr pointing to head .
->Move the ptr forward until ptr.next is not NULL or ptr.next is not present in hashSet
->If we encounter ptr.next already present in hashSet then set ptr.next to NULL
 
 
 
TC=O(N),SC=O(1)
 
 void removeLoop(Node* head)
    {
        Node*slow=head;
        Node*fast=head;
        while(fast!=NULL && fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
            
            if(slow==fast){break;}
        }
        
        if(slow!=fast){return;}
        slow=head;
        
        //handle this case ,i.e,if slow=head
        if(slow == fast) {
              while(fast->next != slow) fast = fast->next;
        }
        else {
        while(slow->next!=fast->next)
        {
            slow=slow->next;
            fast=fast->next;
        }
            
        }
        
        fast->next=NULL;
        return;
    }

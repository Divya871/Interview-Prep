TC=O(N),SC=O(N)

//RECURSION

@ Base case: When we reach one of the following node
->NULL:  represents that the given linked list is not circular.
->head: represents that the given linked list is circular.
 
@ Recursive state: circularLLHelper(curr->next,head);
TC=O(N),SC=O(1)

bool isCircular(Node *head)
{
   // Your code here
   if(head==NULL){return true;}
  Node*curr=head;
  while(curr!=NULL )
  {
      if(curr->next==head)
      {return true;}
      curr=curr->next;
  }
  
  return false;
}


TC=O(N),SC=O(1)----Floyd's Algorithm

bool isCircular(Node *head)
{
   // Your code here
   if(head==NULL){return true;}
   
   Node*slow=head;
   Node*fast=head->next;
   
   while(fast!=NULL && fast->next!=NULL)
   {   if(slow==fast || fast->next==slow)  {return true;}
       else 
       {slow=slow->next;
       fast=fast->next->next;}
    }
    return false;
}

void burn(TreeNode*root,TreeNode*block,int time,vector<vector<int>>&ans)
{
   if(root==NULL || root==block){return;}
   if(time==ans.size())
   {
       ans[time].push_back(root->val);
   }
   burn(root->left,block,time+1,ans);
   burn(root->right,block,time+1,ans);
}
int burningTree(TreeNode*root,int data,vector<vector<int>>&ans)
{
    if(root==NULL){return -1;}
    if(root->val==data)
    {
        burn(root,NULL,0,ans);
        return 1;
    }
    int left=burningTree(root->left,data,ans);
    if(left!=-1)
    {
        burn(root,root->left,left,ans);
        return left+1;
    }
    int r=burningTree(root->right,data,ans);
    if(r!=-1)
    {
        burn(root,root->right,r,ans);
        return r+1;
    }
    return -1;
}
   vector<vector<int>> burningTree(TreeNode *root, int data) {
        vector<vector<int>>ans;
        burningTree(root, data, ans);
        return ans;
    }

Node*midNode(Node*head)
{  if (head == nullptr || head->right == nullptr)
        return head;
    Node*slow=head;
    Node*fast=head;
    while(fast->right!=NULL && fast->right->right!=NULL)
    {
        slow=slow->right;
        fast=fast->right->right;
    }
    return slow;
}

Node *SortedDLLToBST(Node* head)
{if (head == nullptr || head->right == nullptr)
        return head;

        Node*mid=midNode(head);
        Node*prev=mid->left;
        Node*forw=mid->right;
        mid->left=forw->left=mid->right=NULL;
        if(prev!=NULL){prev->right=NULL;}
        Node*root=mid,*lefthead=(prev!=NULL ? head:nullptr),*righthead=forw;
        root->left=SortedDLLToBST(lefthead);
        root->right=SortedDLLToBST(righthead);
        
    return root;
}

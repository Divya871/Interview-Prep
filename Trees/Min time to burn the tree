int mintime=0;
 void kdown(TreeNode*root,TreeNode*block,int t)
    { 
        if(root==NULL || root==block){return;}
        mintime=max(mintime,t);
        kdown(root->left,block,t+1);
        kdown(root->right,block,t+1);
    }
    
    int bt(TreeNode*root,int fireNode)
    {
        if(root==NULL){return -1;}
        if(root->val==fireNode)
        {
            kdown(root,NULL,0);
            return 1;
        }
        int lt=bt(root->left,fireNode);
        if(lt!=-1)
        {
            kdown(root,root->left,lt);
            return lt+1;
        }
        int rt=bt(root->right,fireNode);
        if(rt!=-1)
        {
            kdown(root,root->right,rt);
            return rt+1;
        }
        return -1;
    }
    
    
int burningTree(TreeNode* root, int fireNode)
{
    bt(root,fireNode);
    return mintime;
}

bool nodeToRoot(TreeNode*root,int data,vector<int>&ans)
{
    if(root==NULL){return false;}
    if(root->val==data){ans.push_back(root->val);return true;}
    bool res=nodeToRootPath(root->left,data) || nodeToRootPath(root->right,data);
    if(res)
    {ans.push_back(root->val);}
    return res;
}



*/------------------------------------------------------*/

If return type hai toh use this.

vector<TreeNode*>nodeToRoot(TreeNode* root,int data)
{   
    if(root==NULL) { return {};}
    if(root->val==data) { return {root;}}
    
    vector<TreeNode*>left=nodeToRoot(root->left,data);
    if(left.size()!=0)
    {  left.push_back(root); return left;}
    
   vector<TreeNode*>right=nodeToRoot(root->right,data);
    if(right.size()!=0)
    {  right.push_back(root); return right;}
    
    return {};
    }
    
    

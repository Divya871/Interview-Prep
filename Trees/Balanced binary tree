class BSTPair
{
public:
    bool isBal = true;
    int h = -1;

    bool isBST = true;
    int min = (int)1e9;
    int max = -(int)1e9;

    int size = 0;
    TreeNode *largestRoot = nullptr;
};

BSTPair isBalanced_(TreeNode *root)
{
    if (root == nullptr)
    {
        BSTPair base;
        return base;
    }

    BSTPair lp = isBalanced_(root->left);
    BSTPair rp = isBalanced_(root->right);

    BSTPair myPair;
    myPair.isBal = lp.isBal && rp.isBal;
    if (myPair.isBal && abs(lp.h - rp.h) < 2)
    {
        myPair.h = max(lp.h, rp.h) + 1;
    }
    else
    {
        myPair.isBal = false;
    }

    return myPair;
}

bool isBalanced(TreeNode *root)
{
    return isBalanced_(root).isBal;
}

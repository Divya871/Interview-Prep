 int orangesRotting(vector<vector<int>>& grid) {
      queue<int>q;
      vector<vector<int>>dir{{1,0},{0,1},{0,-1},{-1,0}};
      int n=grid.size();
      int m=grid[0].size();
      
      int freshOrange=0,time=0;
      for(int i=0;i<n;i++)
      {
        for(int j=0;j<m;j++)
        {
          if(grid[i][j]==2)  {q.push(i*m+j);}
         else  if(grid[i][j]==1){freshOrange++;}
         }
      }
      
      if(freshOrange==0){return 0;}
      
      while(!q.empty())
      {
        int size=q.size();
        while(size--)
        {
        int idx=q.front();q.pop();
        int r=idx/m,c=idx%m;
        
        for(int d=0;d<dir.size();d++)
        {
          int x=r+dir[d][0];
          int y=c+dir[d][1];
          
          if(x>=0 && y>=0 && x<n && y<m && grid[x][y]==1)
          {
            freshOrange--;
            grid[x][y]=2;
            q.push(x*m+y);
            
            if(freshOrange==0)
            {
              return time+1;
            }
          }
        }
        }
        time++;
      }
      return -1;
   }
